{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,kBACpCE,EAAYH,SAASC,cAAc,iBACnCG,EAAcJ,SAASC,cAAc,mBACrCI,EAAYL,SAASC,cAAc,UAUzC,SAASK,EAAUC,GACjBV,EAAAW,OAAOC,QAAQ,qBAAwCC,OAAnBH,EAAII,SAAS,QAAgBD,OAAVH,EAAIK,MAAM,M,CAEnE,SAASC,EAASN,GAChBV,EAAAW,OAAOM,QAAQ,oBAAuCJ,OAAnBH,EAAII,SAAS,QAAgBD,OAAVH,EAAIK,MAAM,M,CAyBlE,SAASG,EAAcJ,EAAUC,GAY/B,OAXgB,IAAII,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAzCPb,EAAKwB,iBAAiB,UAStB,SAAkBC,GAChBA,EAAMC,iBAjBQC,EAkBNrB,EAjBRqB,EAAKC,UAAW,EADF,IAAAD,EAuBd,IAJA,IAAME,EAAOC,SAAS1B,EAAU2B,OAC5BlB,EAAQiB,SAAS3B,EAAW4B,OAC1BC,EAASF,SAASzB,EAAY0B,OAC9BE,EAAaJ,GAAQG,EAAS,GAAKnB,EAChCqB,EAAI,EAAGF,EAASE,EAAGA,IAC1BlB,EAAckB,EAAI,EAAGrB,GAClBsB,MAAK,SAAA3B,GACJ,OAAOD,EAAUC,E,IAElB4B,OAAM,SAAA5B,GACL,OAAOM,EAASN,E,IAEpBK,GAASgB,EAEXN,YAAW,YA9BE,SAAAI,GACbA,EAAKC,UAAW,C,CA8BdS,CAAO/B,E,GACN2B,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\nconst startBttn = document.querySelector('button');\nconst disable = name => {\n  name.disabled = true;\n};\nconst enable = name => {\n  name.disabled = false;\n};\n\nform.addEventListener('submit', onSubmit);\n\nfunction fulfilled(obj) {\n  Notify.success(`Fulfilled promise ${obj.position} in ${obj.delay}ms`);\n}\nfunction rejected(obj) {\n  Notify.failure(`Rejected promise ${obj.position} in ${obj.delay}ms`);\n}\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  disable(startBttn);\n  const step = parseInt(stepInput.value);\n  let delay = parseInt(delayInput.value);\n  const amount = parseInt(amountInput.value);\n  const bttnTimout = step * (amount - 1) + delay;\n  for (let i = 0; amount > i; i++) {\n    createPromise(i + 1, delay)\n      .then(obj => {\n        return fulfilled(obj);\n      })\n      .catch(obj => {\n        return rejected(obj);\n      });\n    delay += step;\n  }\n  setTimeout(() => {\n    enable(startBttn);\n  }, bttnTimout);\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$startBttn","$ce04d3a99e08e73b$var$fulfilled","obj","Notify","success","concat","position","delay","$ce04d3a99e08e73b$var$rejected","failure","$ce04d3a99e08e73b$var$createPromise","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","name","disabled","step","parseInt","value","amount","bttnTimout","i","then","catch","$ce04d3a99e08e73b$var$enable"],"version":3,"file":"03-promises.b1a6e8df.js.map"}